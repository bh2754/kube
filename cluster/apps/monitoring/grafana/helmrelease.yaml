---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.48.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: postgres
      namespace: database
    - name: ingress-nginx
      namespace: nginx
  values:
    replicas: 3
    rbac:
      pspEnabled: false
    admin:
      existingSecret: grafana-admin
    envFromSecrets:
      - name: grafana
    grafana.ini:
      auth:
        signout_redirect_url: "https://auth.${SECRET_DOMAIN}/logout"
        oauth_auto_login: false
      auth.generic_oauth:
        enabled: true
        name: Authelia
        client_id: grafana
        client_secret: "${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}"
        scopes: "openid profile email groups"
        empty_scopes: false
        auth_url: "https://auth.${SECRET_DOMAIN}/api/oidc/authorization"
        token_url: "https://auth.${SECRET_DOMAIN}/api/oidc/token"
        api_url: "https://auth.${SECRET_DOMAIN}/api/oidc/userinfo"
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
        org_id: 1
      auth.basic:
        enabled: false
        # disable_login_form: false
      auth.anonymous:
        enabled: true
        org_name: HomeOps
        org_id: 1
        org_role: Viewer
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: "Media"
            orgId: 1
            folder: "Media"
            type: file
            disableDeletion: true
            updateIntervalSeconds: 10
            editable: true
            options:
              path: /var/lib/grafana/dashboards/media
          - name: "Loki"
            orgId: 1
            folder: "Loki"
            type: file
            disableDeletion: true
            updateIntervalSeconds: 10
            editable: true
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: "Thanos"
            orgId: 1
            folder: "Thanos"
            type: file
            disableDeletion: true
            updateIntervalSeconds: 10
            editable: true
            options:
              path: /var/lib/grafana/dashboards/thanos
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local:80
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
          allowUiUpdates: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        auth.home.arpa/enabled: "true"
        external-dns.home.arpa/enabled: "true"
        external-dns/is-public: "true"
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: "grafana-tls"
    persistence:
      enabled: false
