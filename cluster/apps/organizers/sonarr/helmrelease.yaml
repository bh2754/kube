---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: organizers
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.1.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: ingress-nginx
      namespace: nginx
    - name: downloads-gateway
      namespace: vpn
  values:
    controller:
      replicas: 1
    image:
      repository: ghcr.io/onedr0p/sonarr
      tag: 3.0.9.1549
    env:
      TZ: "${TZ}"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      SONARR__APPLICATION_URL: "https://sonarr.${SECRET_DOMAIN}"
      SONARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_PUBLIC_DOMAIN}/css/base/sonarr/hotline.css"></head>';
            sub_filter_once on;
          theme: "hotline"
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: &tls "sonarr-tls"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      media:
        enabled: true
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_MEDIA}"
        mountPath: /media
      download:
        enabled: true
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_DOWNLOAD}"
        mountPath: /download
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
      backup.velero.io/backup-volumes: config
    resources:
      requests:
        cpu: 10m
        memory: 814M
        ephemeral-storage: "2Gi"
      limits:
        memory: 1054M
        ephemeral-storage: "4Gi"
    metrics:
      # -- Enable and configure Exportarr sidecar and Prometheus serviceMonitor.
      # @default -- See values.yaml
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
        labels: {}
      # -- Enable and configure Prometheus Rules for the chart under this key.
      # @default -- See values.yaml
      prometheusRule:
        enabled: true
        rules:
          - alert: SonarrDown
            annotations:
              description: Sonarr service is down.
              summary: Sonarr is down.
            expr: |
              sonarr_system_status == 0
            for: 5m
            labels:
              severity: critical
      exporter:
        image:
          # -- image repository
          repository: ghcr.io/onedr0p/exportarr
          # -- image tag
          tag: v1.1.0
          # -- image pull policy
          pullPolicy: IfNotPresent
        env:
          # -- metrics port
          port: 9794
          # -- Set to true to enable gathering of additional metrics (slow)
          additionalMetrics: true
          # -- Set to true to enable gathering unknown queue items
          unknownQueueItems: true
